{"title":"Final Project","markdown":{"yaml":{"title":"Final Project","author":"Giuliet Kibler","description":"Pre-Covid American Dietary Intention and B Vitamins","output":{"html_document":{"toc":true,"toc_float":true}}},"headingText":"Load packages","containsRefs":false,"markdown":"\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(haven)\nlibrary(gridExtra)\nlibrary(tidyr)\nlibrary(rsconnect)\nlibrary(ggiraph)\nlibrary(htmltools)\nlibrary(plotly)\n\n# Load in data\ndata <- read_xpt(\"P_DR1TOT.XPT\")\n\n# Calculations\n# Impute multiple columns at once\ndata_avgs <- data |>\n  summarise(\n    Calories = median(DR1TKCAL, na.rm = TRUE),\n    Sugar = median(DR1TSUGR, na.rm = TRUE),\n    Carbohydrate = median(DR1TCARB, na.rm = TRUE),\n    Fat = median(DR1TTFAT, na.rm = TRUE),\n    Protein = median(DR1TPROT, na.rm = TRUE),\n    B1 = median(DR1TVB1, na.rm = TRUE),\n    B2 = median(DR1TVB2, na.rm = TRUE),\n    B6 = median(DR1TVB6, na.rm = TRUE))\nkable(data_avgs, caption = \"Total Median Caloric (cal), Macronutrient (g) and B Vitamin Intake Levels (mg)\")\n# Create categorical variables\nhigh_low <- data |>\n  mutate(\n    low_Calories = ifelse(DR1TKCAL < as.numeric(data_avgs['Calories']), 1, 0),\n    low_Sugar = ifelse(DR1TSUGR < as.numeric(data_avgs['Sugar']),1, 0),\n    low_Carbohydrate = ifelse(DR1TCARB < as.numeric(data_avgs['Carbohydrate']), 1, 0),\n    low_Fat = ifelse(DR1TTFAT < as.numeric(data_avgs['Fat']), 1, 0),\n    low_Protein = ifelse(DR1TPROT < as.numeric(data_avgs['Protein']), 1, 0)\n  ) |>\n  select(starts_with(\"low_\") | starts_with(\"high_\"))  # Keep only the categorical columns\nprint(high_low)\n# Extract data to answer questions\nextracted_data <- data |>\n  select(DR1TKCAL, DRQSDT1, DRQSDT8, DR1TSUGR, DRQSDT4, DR1TCARB, DRQSDT9, DR1TTFAT, DRQSDT2, DR1TPROT, DRQSDT10, DR1TVB1, DR1TVB2, DR1TVB6) |>\n  rename(\n    Calories = DR1TKCAL,\n    Low_Calorie = DRQSDT1, # Low cal diet\n    High_Calorie = DRQSDT8, # Weight gain diet\n    Sugar = DR1TSUGR,\n    Low_Sugar = DRQSDT4, # Low sugar diet\n    Carbohydrate = DR1TCARB,\n    Low_Carbohydrate = DRQSDT9, # Low carb diet\n    Fat = DR1TTFAT,\n    Low_Fat = DRQSDT2, # Low fat diet\n    Protein = DR1TPROT,\n    High_Protein = DRQSDT10, # High Protein diet\n    # Vitamin Bs\n    B1 = DR1TVB1, # Vitamin B1\n    B2 = DR1TVB2, # Vitamin B2\n    B6 = DR1TVB6 # Vitamin B6\n  )\n\n# Edit dietary output\nextracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")] <- \n  lapply(extracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")], function(x) {\n    x[is.na(x)] <- 0 # Replace NA values with 0\n    x[x != 0] <- 1 # Replace values other than 0 with 1\n    return(x)\n  })\n\n# Make a new variable for diet type\nextracted_data <- extracted_data |>\n  mutate(Calorie_diet = case_when(\n    Low_Calorie == 1 ~ 0,\n    High_Calorie == 1 ~ 1,\n    TRUE ~ 2  # Assign NA if neither condition is met\n  ))\n```\n\nThis project reviews the dietary intake over the 24-hour period prior to the interview of Americans 1 year or older between 2017 and March of 2020, as collected in the National Health and Nutrition Examination Survey. This data set includes dietary information from the first interview and is a log of the total energy and nutrient intakes, including the macronutrients (carbohydrates, fats, and proteins) and vitamins, from foods and beverages within the previous 24-hours. The project analyzes whether participants intended diet (macronutrient dietary intention) aligns with their actual food consumption (dietary intake). Additionally, it assesses the relationship between dietary intake and the B vitamins intake. B vitamins are cofactors for many cellular pathways, including cellular metabolism and synthesis of DNA and RNA, but are not stored by the body, so it is critical to replenish them daily through foods and supplements (Hanna et al, 2022). Therefore, this analysis is to assess if Americans 1 year or older are eating their intended macronutrient diet and if their intake is associated with B vitamin levels pre-pandemic (January 2017-March 2020).\n\n## Distribution of macronutrient intake by diet type\n\nThe low sugar group averaged lower total sugars than those not on the diet (62.24 vs 90.89 g). Additionally, the low carbohydrate group ate less carbohydrates than those not on this diet (165.395 vs 219.08 g). On the other hand, those on a low fat diet ate more fats than those not on the diet (72.62 vs 71.805 g), meaning the average participant on a low fat diet did not eat less fats than other participants. The average high protein diet had substantially more protein intake than those not on the diet (100.61 vs 64.72 g). Therefore, participants on a low sugar, low carbohydrate, or high protein diet stuck to their diet, while those on a low fat diet did not.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Recreation of figure 3\n# Create interactive plots for each diet and nutrient combination\nplots <- list()\n\n# Function to create the summary plot with custom x-axis labels\ncreate_summary_plot <- function(data, cat_var, cont_var) {\n  # Convert the categorical variable to a factor\n  data[[cat_var]] <- as.factor(data[[cat_var]])\n  filtered_data <- data |> filter(is.finite(!!sym(cont_var)))\n\n  # Create a mapping for human-readable titles\n  title_map <- c(\n    \"Low_Sugar\" = \"Low Sugar\",\n    \"Low_Carbohydrate\" = \"Low Carbohydrate\",\n    \"Low_Fat\" = \"Low Fat\",\n    \"High_Protein\" = \"High Protein\"\n  )\n\n  # Create the box plot with color based on the categorical variable\n  box_plot <- ggplot(filtered_data, aes_string(x = cat_var, y = cont_var, fill = cat_var)) +\n    geom_boxplot() +\n    labs(x = paste(title_map[cat_var], \"(Yes/No)\"), y = cont_var) +  # Use mapped title for x-axis label\n    ggtitle(paste(cont_var, \"Intake for\", title_map[cat_var], \"Diet Intention\")) +  # Use mapped title for plot title\n    theme_minimal() +\n    scale_fill_manual(values = c(\"lightblue\", \"lightgreen\")) +\n    scale_x_discrete(labels = c(\"No\", \"Yes\")) +  # Custom labels for x-axis (0 -> No, 1 -> Yes)\n    theme(legend.position = \"none\")\n  \n  # Return the plot\n  return(box_plot)\n}\n\n# Low Sugar vs Sugar Intake\nresult_sugar <- create_summary_plot(extracted_data, \"Low_Sugar\", \"Sugar\")\nplots$Low_Sugar_Sugar <- ggplotly(result_sugar)\n\n# Low Carbohydrate vs Carbohydrate Intake\nresult_carb <- create_summary_plot(extracted_data, \"Low_Carbohydrate\", \"Carbohydrate\")\nplots$Low_Carb_Carb <- ggplotly(result_carb)\n\n# Low Fat vs Fat Intake\nresult_fat <- create_summary_plot(extracted_data, \"Low_Fat\", \"Fat\")\nplots$Low_Fat_Fat <- ggplotly(result_fat)\n\n# High Protein vs Protein Intake\nresult_protein <- create_summary_plot(extracted_data, \"High_Protein\", \"Protein\")\nplots$High_Protein_Protein <- ggplotly(result_protein)\n\n# Display all plots\nplots$Low_Sugar_Sugar\nplots$Low_Carb_Carb\nplots$Low_Fat_Fat\nplots$High_Protein_Protein\n```\n\n## Distribution of caloric intake\n\nThe median high calorie diet included substantially higher caloric intake than either the low calorie diet or those not on a caloric diet (2528 vs 1834 and 1821 cals, respectively), meaning participants intending to eat high amounts of calories are following their dietary plan. On the other hand, the low calorie diet had a slightly higher median than those not on a caloric diet (1834 vs 1821 cals), meaning the average participant on a low calorie diet actually ate more calories than those not intending to calorically restrict and were not following their intended diet.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Recreating figure 4\nplot <- ggplot(na.omit(extracted_data), aes(x = factor(Calorie_diet), y = Calories, fill = factor(Calorie_diet))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(x = \"Diet Type\", y = \"Calories\", title = \"Calories by Diet Type\") +\n  scale_x_discrete(labels = c(\"0\" = \"Low Calorie Diet\", \"1\" = \"High Calorie Diet\", \"2\" = \"Neither\")) +\n  scale_fill_manual(values = c(\"lightblue\", \"lightgreen\", \"salmon\")) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",  # Remove the legend\n    legend.title = element_blank()  # Remove legend title, if present\n  )\n\n# Convert the ggplot to a plotly object for interactivity\ninteractive_plot <- ggplotly(plot)\n\n# Display the interactive plot\ninteractive_plot\n```\n\n## Association between B vitamins and nutritional intake\n\nLinear regressions are fit for each of the analyzed diets to answer the question of whether macronutrient consumption is correlated with B vitamin intake. B1 and B2 vitamins are more strongly associated (highest correlation value of 0.32 to 0.48 and 0.31 to 0.42, respectively) with all of the macronutrient intakes than B6 (correlation of 0.14 to 0.28). The highest correlations occurr between B1 and caloric intake (0.48) and B1 and carbohydrate intake (0.45). Overall, this demonstrates that getting enough dietary nutrition is critical for B1 and B2 vitamin daily replenishment.\n\nRed dashed lines are used to represent the recommended B vitamin intake levels for men of 1.2 mg of B1, 1.3 miligrams (mg) of B2 and 1.0 mg of B6.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nnutrient_vars <- c(\"Calories\", \"Carbohydrate\", \"Fat\", \"Protein\")\n\n# List of vitamin variables to plot against\nvitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n\n# Define recommended values for B vitamins\nrecommended_values <- list(\n  B1 = 1.2,\n  B2 = 1.3,\n  B6 = 1\n)\n\n# Initialize an empty list to store the interactive plots\ninteractive_plots <- list()\n\n# Create interactive plots for each vitamin\nfor (vitamin in vitamin_vars) {\n  plot_data_list <- list()  # List to store individual plot data\n  \n  # Loop through each nutrient variable to generate data and plot for the current vitamin\n  for (nutrient in nutrient_vars) {\n    if (nutrient %in% colnames(extracted_data) && vitamin %in% colnames(extracted_data)) {\n      \n      # Prepare the data for modeling\n      temp_data <- extracted_data[, c(nutrient, vitamin)]\n      colnames(temp_data) <- c(\"Nutrient\", \"Vitamin\")\n      \n      # Filter out missing and non-finite values\n      temp_data <- temp_data %>%\n        na.omit() %>%\n        filter(is.finite(Nutrient) & is.finite(Vitamin))\n      \n      # Fit a linear model and calculate R^2\n      if (nrow(temp_data) > 1) {\n        model <- lm(Vitamin ~ Nutrient, data = temp_data)\n        r_squared <- summary(model)$r.squared\n        \n        # Create plot data for this nutrient vs. vitamin\n        plot_data_list[[length(plot_data_list) + 1]] <- data.frame(\n          Nutrient = temp_data$Nutrient,\n          Vitamin = temp_data$Vitamin,\n          Vitamin_Name = vitamin,\n          Nutrient_Name = nutrient,\n          Recommended_Value = recommended_values[[vitamin]],\n          R_squared = r_squared\n        )\n      }\n    }\n  }\n  \n  # Combine all the data for this vitamin into a single data frame\n  plot_data <- bind_rows(plot_data_list)\n  \n  # Create the ggplot for this vitamin\n  scatter_plot <- ggplot(plot_data, aes(x = Nutrient, y = Vitamin)) +\n    geom_point(aes(color = Nutrient_Name)) +\n    geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +  # Line of best fit\n    labs(x = \"Dietary Intake\", y = paste(\"Vitamin\", vitamin, \"Level (mg)\")) +\n    theme_minimal() +\n    facet_wrap(~Nutrient_Name, scales = \"free\", nrow = 2, ncol = 2) +  # Free x-scale for each plot\n    theme(legend.title = element_blank(), strip.text = element_text(size = 12)) +\n    ggtitle(paste(vitamin, \"Levels vs Dietary Intake\")) +\n    geom_hline(data = plot_data, aes(yintercept = Recommended_Value),\n               linetype = \"dashed\", color = \"red\", linewidth = 0.7) +\n    geom_text(aes(x = Inf, y = Inf, label = paste(\"R² =\", round(R_squared, 2))),\n              hjust = 1.1, vjust = 1.1, color = \"black\", size = 4, fontface = \"italic\") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10)) +\n    theme(\n    legend.position = \"none\",  # Remove the legend\n    legend.title = element_blank())  # Remove legend title, if present\n\n  # Convert ggplot to plotly interactive plot\n  interactive_plots[[vitamin]] <- ggplotly(scatter_plot)\n}\n\n# To view the interactive plot for each vitamin, simply call:\ninteractive_plots$B1\ninteractive_plots$B2\ninteractive_plots$B6\n```\n\n## Association between caloric diet and B vitamin levels\n\nGiven that dietary nutrition correlated with B vitamin levels, it is useful to know if the intention of dietary consumption is also correlated with B vitamin levels.\n\nOverall, B vitamins have a mild-to-moderate association with dietary intake. The high calorie diet in the graphs of vitamins B1 and B2 vs calories have the highest slopes, indicating that an intention to eat more calories is also associated with an increase in B vitamin intake. This finding makes sense given participants on a high calorie diet actually eat more calories and caloric intake was shown to be moderately associated with these B vitamin levels. Interestingly, caloric diet type's association with the B vitamins was not consistent between the vitamins, indicating that more than just dietary intention is necessary for sufficient B vitamin intake.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nplot_data <- extracted_data[, c(\"Calories\", \"B1\", \"B2\", \"B6\", \"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")]\n\n# Create a new column for DietType based on the diet indicators\nplot_data$DietType <- 2  # Default to 2 (No Diet)\n\n# Assign values for DietType based on conditions\nplot_data$DietType[plot_data$Low_Calorie == 1] <- 0\nplot_data$DietType[plot_data$High_Calorie == 1] <- 1\n\n# Convert DietType to a factor\nplot_data$DietType <- factor(plot_data$DietType, levels = c(0, 1, 2), labels = c(\"Low Diet\", \"High Diet\", \"No Diet\"))\n\n# Filter out missing values\nplot_data <- na.omit(plot_data)\n\n# List of vitamins to plot against Calories\nvitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n\n# Create scatter plots for each vitamin\nfor (vitamin in vitamin_vars) {\n  # Basic scatter plot with a linear model\n  scatter_plot <- ggplot(plot_data, aes_string(x = \"Calories\", y = vitamin, color = \"DietType\")) +\n    geom_point(alpha = 0.3) +  \n    geom_smooth(method = \"lm\", aes(group = DietType), se = FALSE) +  # Linear model for each diet type\n    labs(x = \"Calories\", y = paste(\"Vitamin\", vitamin, \"(mg)\"), title = paste(\"Scatter Plot of Calories vs Vitamin\", vitamin, \"by Caloric Diet Type\")) +\n    theme_minimal() +\n    scale_color_manual(\n      values = c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"grey\"),\n      name = \"Diet Type\",  # Title for the legend\n      labels = c(\"Low Calorie Diet\", \"High Calorie Diet\", \"No Special Diet\")  # Custom legend labels\n    )\n\n  # Color mapping for R² text\n  color_map <- c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"gray\")\n  \n  # Initialize y_pos adjustments for each diet type\n  y_pos_adjustments <- list(\n    \"Low Diet\" = 0.45,  # Adjust this for Low Diet\n    \"High Diet\" = 0.375,  # Adjust this for High Diet\n    \"No Diet\" = 0.3    # Adjust this for No Diet\n  )\n  \n  # Create an empty list to store text annotations for each diet type\n  text_annotations <- list()\n  \n  # Calculate and display R² values\n  for (diet in levels(plot_data$DietType)) {\n    # Fit the model for each diet type\n    model <- lm(as.formula(paste(vitamin, \"~ Calories\")), data = plot_data[plot_data$DietType == diet, ])\n    r_squared <- summary(model)$r.squared\n    \n    # Calculate y position based on the maximum vitamin level and adjustment factor\n    max_y <- max(plot_data[[vitamin]], na.rm = TRUE)\n    y_pos <- max_y * y_pos_adjustments[[diet]]\n    \n    # Add the R² value to the text annotations list\n    text_annotations[[diet]] <- list(\n      x = max(plot_data$Calories, na.rm = TRUE) * 0.9,  # Place the text towards the right of the plot\n      y = y_pos,\n      label = paste(\"R² =\", round(r_squared, 3)),\n      color = color_map[diet]\n    )\n    \n    # Adjust the y position for the next diet type to avoid overlap\n    y_pos_adjustments[[diet]] <- y_pos_adjustments[[diet]] - 0.05  # Slight downward shift for the next annotation\n  }\n  \n  # Add text annotations to the plot\n  for (annotation in text_annotations) {\n    scatter_plot <- scatter_plot +\n      annotate(\"text\", x = annotation$x, y = annotation$y, \n               label = annotation$label, color = annotation$color, \n               hjust = 1, vjust = 1)\n  }\n  \n  # Print the scatter plot for this vitamin\n  print(scatter_plot)\n}\n```\n","srcMarkdownNoYaml":"\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Load packages\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(haven)\nlibrary(gridExtra)\nlibrary(tidyr)\nlibrary(rsconnect)\nlibrary(ggiraph)\nlibrary(htmltools)\nlibrary(plotly)\n\n# Load in data\ndata <- read_xpt(\"P_DR1TOT.XPT\")\n\n# Calculations\n# Impute multiple columns at once\ndata_avgs <- data |>\n  summarise(\n    Calories = median(DR1TKCAL, na.rm = TRUE),\n    Sugar = median(DR1TSUGR, na.rm = TRUE),\n    Carbohydrate = median(DR1TCARB, na.rm = TRUE),\n    Fat = median(DR1TTFAT, na.rm = TRUE),\n    Protein = median(DR1TPROT, na.rm = TRUE),\n    B1 = median(DR1TVB1, na.rm = TRUE),\n    B2 = median(DR1TVB2, na.rm = TRUE),\n    B6 = median(DR1TVB6, na.rm = TRUE))\nkable(data_avgs, caption = \"Total Median Caloric (cal), Macronutrient (g) and B Vitamin Intake Levels (mg)\")\n# Create categorical variables\nhigh_low <- data |>\n  mutate(\n    low_Calories = ifelse(DR1TKCAL < as.numeric(data_avgs['Calories']), 1, 0),\n    low_Sugar = ifelse(DR1TSUGR < as.numeric(data_avgs['Sugar']),1, 0),\n    low_Carbohydrate = ifelse(DR1TCARB < as.numeric(data_avgs['Carbohydrate']), 1, 0),\n    low_Fat = ifelse(DR1TTFAT < as.numeric(data_avgs['Fat']), 1, 0),\n    low_Protein = ifelse(DR1TPROT < as.numeric(data_avgs['Protein']), 1, 0)\n  ) |>\n  select(starts_with(\"low_\") | starts_with(\"high_\"))  # Keep only the categorical columns\nprint(high_low)\n# Extract data to answer questions\nextracted_data <- data |>\n  select(DR1TKCAL, DRQSDT1, DRQSDT8, DR1TSUGR, DRQSDT4, DR1TCARB, DRQSDT9, DR1TTFAT, DRQSDT2, DR1TPROT, DRQSDT10, DR1TVB1, DR1TVB2, DR1TVB6) |>\n  rename(\n    Calories = DR1TKCAL,\n    Low_Calorie = DRQSDT1, # Low cal diet\n    High_Calorie = DRQSDT8, # Weight gain diet\n    Sugar = DR1TSUGR,\n    Low_Sugar = DRQSDT4, # Low sugar diet\n    Carbohydrate = DR1TCARB,\n    Low_Carbohydrate = DRQSDT9, # Low carb diet\n    Fat = DR1TTFAT,\n    Low_Fat = DRQSDT2, # Low fat diet\n    Protein = DR1TPROT,\n    High_Protein = DRQSDT10, # High Protein diet\n    # Vitamin Bs\n    B1 = DR1TVB1, # Vitamin B1\n    B2 = DR1TVB2, # Vitamin B2\n    B6 = DR1TVB6 # Vitamin B6\n  )\n\n# Edit dietary output\nextracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")] <- \n  lapply(extracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")], function(x) {\n    x[is.na(x)] <- 0 # Replace NA values with 0\n    x[x != 0] <- 1 # Replace values other than 0 with 1\n    return(x)\n  })\n\n# Make a new variable for diet type\nextracted_data <- extracted_data |>\n  mutate(Calorie_diet = case_when(\n    Low_Calorie == 1 ~ 0,\n    High_Calorie == 1 ~ 1,\n    TRUE ~ 2  # Assign NA if neither condition is met\n  ))\n```\n\nThis project reviews the dietary intake over the 24-hour period prior to the interview of Americans 1 year or older between 2017 and March of 2020, as collected in the National Health and Nutrition Examination Survey. This data set includes dietary information from the first interview and is a log of the total energy and nutrient intakes, including the macronutrients (carbohydrates, fats, and proteins) and vitamins, from foods and beverages within the previous 24-hours. The project analyzes whether participants intended diet (macronutrient dietary intention) aligns with their actual food consumption (dietary intake). Additionally, it assesses the relationship between dietary intake and the B vitamins intake. B vitamins are cofactors for many cellular pathways, including cellular metabolism and synthesis of DNA and RNA, but are not stored by the body, so it is critical to replenish them daily through foods and supplements (Hanna et al, 2022). Therefore, this analysis is to assess if Americans 1 year or older are eating their intended macronutrient diet and if their intake is associated with B vitamin levels pre-pandemic (January 2017-March 2020).\n\n## Distribution of macronutrient intake by diet type\n\nThe low sugar group averaged lower total sugars than those not on the diet (62.24 vs 90.89 g). Additionally, the low carbohydrate group ate less carbohydrates than those not on this diet (165.395 vs 219.08 g). On the other hand, those on a low fat diet ate more fats than those not on the diet (72.62 vs 71.805 g), meaning the average participant on a low fat diet did not eat less fats than other participants. The average high protein diet had substantially more protein intake than those not on the diet (100.61 vs 64.72 g). Therefore, participants on a low sugar, low carbohydrate, or high protein diet stuck to their diet, while those on a low fat diet did not.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Recreation of figure 3\n# Create interactive plots for each diet and nutrient combination\nplots <- list()\n\n# Function to create the summary plot with custom x-axis labels\ncreate_summary_plot <- function(data, cat_var, cont_var) {\n  # Convert the categorical variable to a factor\n  data[[cat_var]] <- as.factor(data[[cat_var]])\n  filtered_data <- data |> filter(is.finite(!!sym(cont_var)))\n\n  # Create a mapping for human-readable titles\n  title_map <- c(\n    \"Low_Sugar\" = \"Low Sugar\",\n    \"Low_Carbohydrate\" = \"Low Carbohydrate\",\n    \"Low_Fat\" = \"Low Fat\",\n    \"High_Protein\" = \"High Protein\"\n  )\n\n  # Create the box plot with color based on the categorical variable\n  box_plot <- ggplot(filtered_data, aes_string(x = cat_var, y = cont_var, fill = cat_var)) +\n    geom_boxplot() +\n    labs(x = paste(title_map[cat_var], \"(Yes/No)\"), y = cont_var) +  # Use mapped title for x-axis label\n    ggtitle(paste(cont_var, \"Intake for\", title_map[cat_var], \"Diet Intention\")) +  # Use mapped title for plot title\n    theme_minimal() +\n    scale_fill_manual(values = c(\"lightblue\", \"lightgreen\")) +\n    scale_x_discrete(labels = c(\"No\", \"Yes\")) +  # Custom labels for x-axis (0 -> No, 1 -> Yes)\n    theme(legend.position = \"none\")\n  \n  # Return the plot\n  return(box_plot)\n}\n\n# Low Sugar vs Sugar Intake\nresult_sugar <- create_summary_plot(extracted_data, \"Low_Sugar\", \"Sugar\")\nplots$Low_Sugar_Sugar <- ggplotly(result_sugar)\n\n# Low Carbohydrate vs Carbohydrate Intake\nresult_carb <- create_summary_plot(extracted_data, \"Low_Carbohydrate\", \"Carbohydrate\")\nplots$Low_Carb_Carb <- ggplotly(result_carb)\n\n# Low Fat vs Fat Intake\nresult_fat <- create_summary_plot(extracted_data, \"Low_Fat\", \"Fat\")\nplots$Low_Fat_Fat <- ggplotly(result_fat)\n\n# High Protein vs Protein Intake\nresult_protein <- create_summary_plot(extracted_data, \"High_Protein\", \"Protein\")\nplots$High_Protein_Protein <- ggplotly(result_protein)\n\n# Display all plots\nplots$Low_Sugar_Sugar\nplots$Low_Carb_Carb\nplots$Low_Fat_Fat\nplots$High_Protein_Protein\n```\n\n## Distribution of caloric intake\n\nThe median high calorie diet included substantially higher caloric intake than either the low calorie diet or those not on a caloric diet (2528 vs 1834 and 1821 cals, respectively), meaning participants intending to eat high amounts of calories are following their dietary plan. On the other hand, the low calorie diet had a slightly higher median than those not on a caloric diet (1834 vs 1821 cals), meaning the average participant on a low calorie diet actually ate more calories than those not intending to calorically restrict and were not following their intended diet.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Recreating figure 4\nplot <- ggplot(na.omit(extracted_data), aes(x = factor(Calorie_diet), y = Calories, fill = factor(Calorie_diet))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(x = \"Diet Type\", y = \"Calories\", title = \"Calories by Diet Type\") +\n  scale_x_discrete(labels = c(\"0\" = \"Low Calorie Diet\", \"1\" = \"High Calorie Diet\", \"2\" = \"Neither\")) +\n  scale_fill_manual(values = c(\"lightblue\", \"lightgreen\", \"salmon\")) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",  # Remove the legend\n    legend.title = element_blank()  # Remove legend title, if present\n  )\n\n# Convert the ggplot to a plotly object for interactivity\ninteractive_plot <- ggplotly(plot)\n\n# Display the interactive plot\ninteractive_plot\n```\n\n## Association between B vitamins and nutritional intake\n\nLinear regressions are fit for each of the analyzed diets to answer the question of whether macronutrient consumption is correlated with B vitamin intake. B1 and B2 vitamins are more strongly associated (highest correlation value of 0.32 to 0.48 and 0.31 to 0.42, respectively) with all of the macronutrient intakes than B6 (correlation of 0.14 to 0.28). The highest correlations occurr between B1 and caloric intake (0.48) and B1 and carbohydrate intake (0.45). Overall, this demonstrates that getting enough dietary nutrition is critical for B1 and B2 vitamin daily replenishment.\n\nRed dashed lines are used to represent the recommended B vitamin intake levels for men of 1.2 mg of B1, 1.3 miligrams (mg) of B2 and 1.0 mg of B6.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nnutrient_vars <- c(\"Calories\", \"Carbohydrate\", \"Fat\", \"Protein\")\n\n# List of vitamin variables to plot against\nvitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n\n# Define recommended values for B vitamins\nrecommended_values <- list(\n  B1 = 1.2,\n  B2 = 1.3,\n  B6 = 1\n)\n\n# Initialize an empty list to store the interactive plots\ninteractive_plots <- list()\n\n# Create interactive plots for each vitamin\nfor (vitamin in vitamin_vars) {\n  plot_data_list <- list()  # List to store individual plot data\n  \n  # Loop through each nutrient variable to generate data and plot for the current vitamin\n  for (nutrient in nutrient_vars) {\n    if (nutrient %in% colnames(extracted_data) && vitamin %in% colnames(extracted_data)) {\n      \n      # Prepare the data for modeling\n      temp_data <- extracted_data[, c(nutrient, vitamin)]\n      colnames(temp_data) <- c(\"Nutrient\", \"Vitamin\")\n      \n      # Filter out missing and non-finite values\n      temp_data <- temp_data %>%\n        na.omit() %>%\n        filter(is.finite(Nutrient) & is.finite(Vitamin))\n      \n      # Fit a linear model and calculate R^2\n      if (nrow(temp_data) > 1) {\n        model <- lm(Vitamin ~ Nutrient, data = temp_data)\n        r_squared <- summary(model)$r.squared\n        \n        # Create plot data for this nutrient vs. vitamin\n        plot_data_list[[length(plot_data_list) + 1]] <- data.frame(\n          Nutrient = temp_data$Nutrient,\n          Vitamin = temp_data$Vitamin,\n          Vitamin_Name = vitamin,\n          Nutrient_Name = nutrient,\n          Recommended_Value = recommended_values[[vitamin]],\n          R_squared = r_squared\n        )\n      }\n    }\n  }\n  \n  # Combine all the data for this vitamin into a single data frame\n  plot_data <- bind_rows(plot_data_list)\n  \n  # Create the ggplot for this vitamin\n  scatter_plot <- ggplot(plot_data, aes(x = Nutrient, y = Vitamin)) +\n    geom_point(aes(color = Nutrient_Name)) +\n    geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +  # Line of best fit\n    labs(x = \"Dietary Intake\", y = paste(\"Vitamin\", vitamin, \"Level (mg)\")) +\n    theme_minimal() +\n    facet_wrap(~Nutrient_Name, scales = \"free\", nrow = 2, ncol = 2) +  # Free x-scale for each plot\n    theme(legend.title = element_blank(), strip.text = element_text(size = 12)) +\n    ggtitle(paste(vitamin, \"Levels vs Dietary Intake\")) +\n    geom_hline(data = plot_data, aes(yintercept = Recommended_Value),\n               linetype = \"dashed\", color = \"red\", linewidth = 0.7) +\n    geom_text(aes(x = Inf, y = Inf, label = paste(\"R² =\", round(R_squared, 2))),\n              hjust = 1.1, vjust = 1.1, color = \"black\", size = 4, fontface = \"italic\") +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10)) +\n    theme(\n    legend.position = \"none\",  # Remove the legend\n    legend.title = element_blank())  # Remove legend title, if present\n\n  # Convert ggplot to plotly interactive plot\n  interactive_plots[[vitamin]] <- ggplotly(scatter_plot)\n}\n\n# To view the interactive plot for each vitamin, simply call:\ninteractive_plots$B1\ninteractive_plots$B2\ninteractive_plots$B6\n```\n\n## Association between caloric diet and B vitamin levels\n\nGiven that dietary nutrition correlated with B vitamin levels, it is useful to know if the intention of dietary consumption is also correlated with B vitamin levels.\n\nOverall, B vitamins have a mild-to-moderate association with dietary intake. The high calorie diet in the graphs of vitamins B1 and B2 vs calories have the highest slopes, indicating that an intention to eat more calories is also associated with an increase in B vitamin intake. This finding makes sense given participants on a high calorie diet actually eat more calories and caloric intake was shown to be moderately associated with these B vitamin levels. Interestingly, caloric diet type's association with the B vitamins was not consistent between the vitamins, indicating that more than just dietary intention is necessary for sufficient B vitamin intake.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\nplot_data <- extracted_data[, c(\"Calories\", \"B1\", \"B2\", \"B6\", \"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")]\n\n# Create a new column for DietType based on the diet indicators\nplot_data$DietType <- 2  # Default to 2 (No Diet)\n\n# Assign values for DietType based on conditions\nplot_data$DietType[plot_data$Low_Calorie == 1] <- 0\nplot_data$DietType[plot_data$High_Calorie == 1] <- 1\n\n# Convert DietType to a factor\nplot_data$DietType <- factor(plot_data$DietType, levels = c(0, 1, 2), labels = c(\"Low Diet\", \"High Diet\", \"No Diet\"))\n\n# Filter out missing values\nplot_data <- na.omit(plot_data)\n\n# List of vitamins to plot against Calories\nvitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n\n# Create scatter plots for each vitamin\nfor (vitamin in vitamin_vars) {\n  # Basic scatter plot with a linear model\n  scatter_plot <- ggplot(plot_data, aes_string(x = \"Calories\", y = vitamin, color = \"DietType\")) +\n    geom_point(alpha = 0.3) +  \n    geom_smooth(method = \"lm\", aes(group = DietType), se = FALSE) +  # Linear model for each diet type\n    labs(x = \"Calories\", y = paste(\"Vitamin\", vitamin, \"(mg)\"), title = paste(\"Scatter Plot of Calories vs Vitamin\", vitamin, \"by Caloric Diet Type\")) +\n    theme_minimal() +\n    scale_color_manual(\n      values = c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"grey\"),\n      name = \"Diet Type\",  # Title for the legend\n      labels = c(\"Low Calorie Diet\", \"High Calorie Diet\", \"No Special Diet\")  # Custom legend labels\n    )\n\n  # Color mapping for R² text\n  color_map <- c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"gray\")\n  \n  # Initialize y_pos adjustments for each diet type\n  y_pos_adjustments <- list(\n    \"Low Diet\" = 0.45,  # Adjust this for Low Diet\n    \"High Diet\" = 0.375,  # Adjust this for High Diet\n    \"No Diet\" = 0.3    # Adjust this for No Diet\n  )\n  \n  # Create an empty list to store text annotations for each diet type\n  text_annotations <- list()\n  \n  # Calculate and display R² values\n  for (diet in levels(plot_data$DietType)) {\n    # Fit the model for each diet type\n    model <- lm(as.formula(paste(vitamin, \"~ Calories\")), data = plot_data[plot_data$DietType == diet, ])\n    r_squared <- summary(model)$r.squared\n    \n    # Calculate y position based on the maximum vitamin level and adjustment factor\n    max_y <- max(plot_data[[vitamin]], na.rm = TRUE)\n    y_pos <- max_y * y_pos_adjustments[[diet]]\n    \n    # Add the R² value to the text annotations list\n    text_annotations[[diet]] <- list(\n      x = max(plot_data$Calories, na.rm = TRUE) * 0.9,  # Place the text towards the right of the plot\n      y = y_pos,\n      label = paste(\"R² =\", round(r_squared, 3)),\n      color = color_map[diet]\n    )\n    \n    # Adjust the y position for the next diet type to avoid overlap\n    y_pos_adjustments[[diet]] <- y_pos_adjustments[[diet]] - 0.05  # Slight downward shift for the next annotation\n  }\n  \n  # Add text annotations to the plot\n  for (annotation in text_annotations) {\n    scatter_plot <- scatter_plot +\n      annotate(\"text\", x = annotation$x, y = annotation$y, \n               label = annotation$label, color = annotation$color, \n               hjust = 1, vjust = 1)\n  }\n  \n  # Print the scatter plot for this vitamin\n  print(scatter_plot)\n}\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":{"toc":true,"toc_float":true}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"cosmo","title":"Final Project","author":"Giuliet Kibler","description":"Pre-Covid American Dietary Intention and B Vitamins"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}