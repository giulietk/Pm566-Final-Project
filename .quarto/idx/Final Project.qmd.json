{"title":"PM 566 Final Project","markdown":{"yaml":{"title":"PM 566 Final Project","author":"Giuliet Kibler","format":{"pdf":{"embed-resources":true}},"editor":"visual"},"headingText":"Pre-Covid American Dietary Intention and B Vitamins","containsRefs":false,"markdown":"\n\n\n# Introduction\n\nThe National Health and Nutrition Examination Survey is a survey, typically conducted over a two-year period, to estimate the dietary intake over the 24-hour period prior to the interview of Americans 1 year or older. This particular dataset is a combination of data collected in the 2017-2018 cycle and 2019-March 2020 since the NHANES program was suspended in March of 2020 due to the COVID-19 pandemic. The dietary interview component of this survey is called \"What We Eat in America\" (WWEIA) and data is collected using the USDA's Automated Multiple Pass Method (AMPM). All participants are eligible for two survey interviews, the first of which is recorded in person at the Mobile Examination Center, and the second is conducted over the phone 3 to 10 days later. This data set includes dietary information from the first interview and is a log of the total energy and nutrient intakes, including the macronutrients (carbohydrates, fats, and proteins) and vitamins, from foods and beverages within the previous 24-hours. Of particular interest in this dataset is whether participants intended diet (macronutrient dietary intention) aligns with their actual food consumption (dietary intake). Additionally, there is interest in assessing the relationship between dietary intake and the B vitamins intake. B vitamins are cofactors for many cellular pathways, including cellular metabolism and synthesis of DNA and RNA, but are not stored by the body, so it is critical to replenish them daily through foods and supplements (Hanna et al, 2022). Therefore, this analysis is to assess if Americans 1 year or older are eating their intended macronutrient diet and if their intake is associated with B vitamin levels pre-pandemic (2017-March 2020).\n\n# Methods\n\nThe P_DR1TOT dataset for 2017-March 2020 was downloaded from the CDC's NHANES records of dietary data. This is a dataset from the WWEIA day 1 interviews, conducted between 2017 and March of 2020, and includes total dietary intake of participants.\n\nData variables of interest include 6 variables of special diets, referred to here as intended diet, 5 energy (caloric) and macronutrient variables, and B vitamins 1, 2, and 6. These variables were extracted from the dataset and relabeled to be more informative. 12 intended diets were recorded in separate variables as numbers 1-12 for yes to that diet or missing for no. These variables were altered to 1 for yes and 0 for no. Since low calorie and high calorie diets are labeled separately, a new variable for diet was created where low calorie is 0, high calorie is 1, and neither is 2.\n\nCorrelation between intended macronutrient or caloric diet and true dietary intake was assessed using summary statistics and box plots.\n\nThe proportion of participants below the recommended B vitamins intake levels for men were reported. Recommendations for men are used, rather than splitting the data by sex, because sex is not reported in the dataset and female dietary recommendations are less studied in scientific literature. Correlation between dietary intake, as well as caloric diet type, and B vitamin levels was assessed using scatter plots and linear fitted models.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Open necessary packages\nlibrary(haven)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(gridExtra)\nlibrary(tidyr)\n```\n\n## Exploring Variables of Interest\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Read in table and check\ndata <- read_xpt(\"P_DR1TOT.XPT\")\nhead(data)\ntail(data)\ndim(data)\nsapply(data, class)\n```\n\n### Figure 1. Distribution of Macronutrients for All Participants\n\n```{r,  echo=FALSE, warning=FALSE}\nboxplot_data <- data |>\n  select(DR1TSUGR, DR1TCARB, DR1TTFAT, DR1TPROT) |>\n  pivot_longer(cols = everything(), names_to = \"Nutrient\", values_to = \"Value\")\n\n# Create the box plot\nggplot(boxplot_data, aes(x = Nutrient, y = Value)) +\n  geom_boxplot(fill = \"lightblue\") +\n  labs(title = \"Box Plot of Macronutrient Intake for All Participants\",\n       x = \"Macronutrient\",\n       y = \"Nurtitional Intake (g)\") +\n  scale_x_discrete(labels = c(\"DR1TCARB\" = \"Carbohydrates\", \"DR1TPROT\" = \"Protein\",\"DR1TSUGR\" = \"Sugar\", \"DR1TTFAT\" = \"Fat\")) +\n  theme_minimal()\n```\n\nAll mean values for intake are increased by high outliers, so medians are assessed instead.\n\n### Table 1. Median Caloric, Macronutrient and B Vitamin Intake Levels\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Impute multiple columns at once\ndata_avgs <- data |>\n  summarise(\n    Calories = median(DR1TKCAL, na.rm = TRUE),\n    Sugar = median(DR1TSUGR, na.rm = TRUE),\n    Carbohydrate = median(DR1TCARB, na.rm = TRUE),\n    Fat = median(DR1TTFAT, na.rm = TRUE),\n    Protein = median(DR1TPROT, na.rm = TRUE),\n    B1 = median(DR1TVB1, na.rm = TRUE),\n    B2 = median(DR1TVB2, na.rm = TRUE),\n    B6 = median(DR1TVB6, na.rm = TRUE))\nkable(data_avgs, caption = \"Total Median Caloric (cal), Macronutrient (g) and B Vitamin Intake Levels (mg)\")\n```\n\nThese median values are used to categorize whether dietary intake is high (above the median) or low (below the median).\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Create categorical variables\nhigh_low <- data |>\n  mutate(\n    low_Calories = ifelse(DR1TKCAL < as.numeric(data_avgs['Calories']), 1, 0),\n    low_Sugar = ifelse(DR1TSUGR < as.numeric(data_avgs['Sugar']),1, 0),\n    low_Carbohydrate = ifelse(DR1TCARB < as.numeric(data_avgs['Carbohydrate']), 1, 0),\n    low_Fat = ifelse(DR1TTFAT < as.numeric(data_avgs['Fat']), 1, 0),\n    low_Protein = ifelse(DR1TPROT < as.numeric(data_avgs['Protein']), 1, 0)\n  ) |>\n  select(starts_with(\"low_\") | starts_with(\"high_\"))  # Keep only the categorical columns\nprint(high_low)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Extract data to answer questions\nextracted_data <- data |>\n  select(DR1TKCAL, DRQSDT1, DRQSDT8, DR1TSUGR, DRQSDT4, DR1TCARB, DRQSDT9, DR1TTFAT, DRQSDT2, DR1TPROT, DRQSDT10, DR1TVB1, DR1TVB2, DR1TVB6) |>\n  rename(\n    Calories = DR1TKCAL,\n    Low_Calorie = DRQSDT1, # Low cal diet\n    High_Calorie = DRQSDT8, # Weight gain diet\n    Sugar = DR1TSUGR,\n    Low_Sugar = DRQSDT4, # Low sugar diet\n    Carbohydrate = DR1TCARB,\n    Low_Carbohydrate = DRQSDT9, # Low carb diet\n    Fat = DR1TTFAT,\n    Low_Fat = DRQSDT2, # Low fat diet\n    Protein = DR1TPROT,\n    High_Protein = DRQSDT10, # High Protein diet\n    # Vitamin Bs\n    B1 = DR1TVB1, # Vitamin B1\n    B2 = DR1TVB2, # Vitamin B2\n    B6 = DR1TVB6 # Vitamin B6\n  )\n\n# Edit dietary output\nextracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")] <- \n  lapply(extracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")], function(x) {\n    x[is.na(x)] <- 0 # Replace NA values with 0\n    x[x != 0] <- 1 # Replace values other than 0 with 1\n    return(x)\n  })\n\n# Make a new variable for diet type\nextracted_data <- extracted_data |>\n  mutate(Calorie_diet = case_when(\n    Low_Calorie == 1 ~ 0,\n    High_Calorie == 1 ~ 1,\n    TRUE ~ 2  # Assign NA if neither condition is met\n  ))\nprint(c(\"Head of Categorization of Diet Type (0 = Low Calorie, 1 = High Calorie and 2 = No Caloric Diet)\"))\nhead(extracted_data$Calorie_diet)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Summary of Extracted Data\nhead(extracted_data)\ntail(extracted_data)\ndim(extracted_data)\nsapply(extracted_data, class)\n```\n\n# Preliminary Results\n\n## Investigate correlation between intended diet and dietary intake\n\n### Figure 2. Proportion of Participants with an Intended Macronutrient Diet Ingesting Above or Below the Total Median Intake\n\n```{r, echo=FALSE, warning=FALSE}\n# Check if both data frames have the same number of rows\nif (nrow(extracted_data) == nrow(high_low)) {\n  combined_data <- data.frame(\n    Low_Sugar = extracted_data$Low_Sugar,\n    low_Sugar = high_low$low_Sugar,\n    Low_Carbohydrate = extracted_data$Low_Carbohydrate,\n    low_Carbohydrate = high_low$low_Carbohydrate,\n    Low_Fat = extracted_data$Low_Fat,\n    low_Fat = high_low$low_Fat,\n    High_Protein = extracted_data$High_Protein,\n    low_Protein = high_low$low_Protein\n  )\n} else {\n  stop(\"The data frames have different numbers of rows and cannot be combined.\")\n}\n\n# Create an empty list to store the plots\nplot_list <- list()\n\n# Create pairs for plotting\npairs <- list(\n  c(\"Low_Sugar\", \"low_Sugar\"), # Intended diet, actual intake\n  c(\"Low_Carbohydrate\", \"low_Carbohydrate\"),\n  c(\"Low_Fat\", \"low_Fat\"),\n  c(\"High_Protein\", \"low_Protein\")\n)\n\n# Create a mapping for readable titles\ntitle_map <- c(\n  \"Low_Sugar\" = \"Low Sugar\",\n  \"Low_Carbohydrate\" = \"Low Carbohydrate\",\n  \"Low_Fat\" = \"Low Fat\",\n  \"High_Protein\" = \"High Protein\"\n)\n\n# Loop through pairs of variables to create stacked bar plots\nfor (pair in pairs) {\n  \n  # Create a data frame for plotting (without reshaping)\n  plot_data <- data.frame(\n    Diet = factor(combined_data[[pair[1]]], levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n    Intake = factor(combined_data[[pair[2]]], levels = c(0, 1), labels = c(\"Above Median\", \"Below Median\"))\n  )\n  \n  # Filter the data for Diet == \"Yes\" (Diet = 1)\n  plot_data <- plot_data[plot_data$Diet == \"Yes\", ]\n  \n  # Create a stacked bar plot\n  plot <- ggplot(plot_data, aes(x = Diet, fill = Intake)) +\n    geom_bar(position = \"fill\") +\n    scale_fill_manual(values = c(\"Above Median\" = \"salmon\", \"Below Median\" = \"skyblue\")) +\n    labs(x = paste(title_map[1],\"Diet\"), \n         y = \"Proportion\",\n         title = paste(title_map[pair[1]], \"Diet vs. Intake\")) +  # Use the mapped title) +\n    theme_minimal() +\n    theme(legend.title = element_blank())  # Remove legend title\n  \n  # Add the plot to the list\n  plot_list[[length(plot_list) + 1]] <- plot\n}\n\n# Arrange the plots in a 2x2 grid\ngrid.arrange(grobs = plot_list, ncol = 2, nrow = 2)\n```\n\nApproximately 63% of participants on a low sugar diet are eating less than the median sugar levels, while nearly 75% of participants on a low carbohydrate diet are eating less than the median carbohydrate levels. Conversely, less than half of the participants are eating less than the median fat levels. Finally, more than 75% of participants are eating their intended high protein diet compared to the median protein levels.\n\nThese results show that a high protein diet is the most well adhered to diet when compared to the surveyed participants, while a low fat diet is the least well adhered to diet.\n\n## Compare the spread of macronutrient intake levels of participants with an intended diet with those not on an intended diet\n\n```{r, echo=FALSE, warning=FALSE}\n# Function for summary statistics and plotting\ncreate_summary_plot <- function(data, cat_var, cont_var) {\n  # Convert the categorical variable to a factor\n  data[[cat_var]] <- as.factor(data[[cat_var]])\n  filtered_data <- data |> filter(is.finite(!!sym(cont_var)))\n  \n    # Create a mapping for human-readable titles\n  title_map <- c(\n    \"Low_Sugar\" = \"Low Sugar\",\n    \"Low_Carbohydrate\" = \"Low Carbohydrate\",\n    \"Low_Fat\" = \"Low Fat\",\n    \"High_Protein\" = \"High Protein\"\n  )\n\n  # Create the box plot with color based on the categorical variable\n  box_plot <- ggplot(filtered_data, aes_string(x = cat_var, y = cont_var, fill = cat_var)) +\n    geom_boxplot() +\n    labs(x = paste(title_map[cat_var], \"(yes/no)\"), y = cont_var) +  # Use mapped title for x-axis label\n    ggtitle(paste(cont_var, \"Intake for\", title_map[cat_var], \"Diet Intention\")) +  # Use mapped title for plot title\n    theme_minimal() +\n    scale_fill_manual(values = c(\"lightblue\", \"lightgreen\")) +\n    theme(legend.position = \"none\")\n\n  # Create the summary table\n  summary_table <- data |>\n    group_by(!!sym(cat_var)) |>\n    summarize(\n      Mean = mean(!!sym(cont_var), na.rm = TRUE),\n      Median = median(!!sym(cont_var), na.rm = TRUE),\n      Min = min(!!sym(cont_var), na.rm = TRUE),\n      Max = max(!!sym(cont_var), na.rm = TRUE),\n      Count = n(),\n      .groups = 'drop'\n    )\n\n  # Return the plot and summary table separately\n  return(list(plot = box_plot, summary_table = summary_table))\n}\n\n# Create lists to hold the plots and individual summaries\nplots <- list()\nsummaries <- list()\n\n# Generate box plots and individual summary tables for nutrients\nextracted_data$Low_Sugar <- factor(extracted_data$Low_Sugar, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_sugar <- create_summary_plot(extracted_data, \"Low_Sugar\", \"Sugar\")\nplots[[1]] <- result_sugar$plot\nsummaries[[1]] <- result_sugar$summary_table\nkable(result_sugar$summary_table, caption = \"Table 1. Summary of Sugar Intake\", , col.names = c(\"Low Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\nextracted_data$Low_Carbohydrate <- factor(extracted_data$Low_Carbohydrate, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_carb <- create_summary_plot(extracted_data, \"Low_Carbohydrate\", \"Carbohydrate\")\nplots[[2]] <- result_carb$plot\nsummaries[[2]] <- result_carb$summary_table\nkable(result_carb$summary_table, caption = \"Table 2. Summary of Carbohydrate Intake\", col.names = c(\"Low Carb Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\nextracted_data$Low_Fat <- factor(extracted_data$Low_Fat, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_fat <- create_summary_plot(extracted_data, \"Low_Fat\", \"Fat\")\nplots[[3]] <- result_fat$plot\nsummaries[[3]] <- result_fat$summary_table\nkable(result_fat$summary_table, caption = \"Table 3. Summary of Fat Intake\", col.names = c(\"Low Fat Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\nextracted_data$High_Protein <- factor(extracted_data$High_Protein, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_pro <- create_summary_plot(extracted_data, \"High_Protein\", \"Protein\")\nplots[[4]] <- result_pro$plot\nsummaries[[4]] <- result_pro$summary_table\nkable(result_pro$summary_table, caption = \"Table 4. Summary of Protein Intake\", col.names = c(\"High Protein Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\n```\n\n### Figure 3. Distribution of Macronutrient Dietary Intake by Diet Type\n\n```{r, echo=FALSE}\n# Print box plots\ngrid.arrange(grobs = plots, ncol = 2) \n```\n\nThe low sugar group averaged lower total sugars than those not on the diet (62.24 vs 90.89 g). Additionally, the low carbohydrate group ate less carbohydrates than those not on this diet (165.395 vs 219.08 g). On the other hand, those on a low fat diet ate more fats than those not on the diet (72.62 vs 71.805 g), meaning the average participant on a low fat diet did not eat less fats than other participants. The average high protein diet had substantially more protein intake than those not on the diet (100.61 vs 64.72 g).\n\n### Table 5. Summary of Caloric Intake by Diet Type\n\n```{r, echo=FALSE, warning=FALSE}\n# Summary statistics for caloric diets\ndiet_summary_stats <- extracted_data |>\n  mutate(Diet = recode(Calorie_diet,\n                               `0` = \"Low Calorie Diet\",\n                               `1` = \"High Calorie Diet\",\n                               `2` = \"Neither\")) |> \n  # Group by the recoded Calorie_diet variable\n  group_by(Diet) |>\n  summarize(\n    Mean = mean(Calories, na.rm = TRUE),\n    Median = median(Calories, na.rm = TRUE),\n    Min = min(Calories, na.rm = TRUE),\n    Max = max(Calories, na.rm = TRUE),\n    Count = n(),\n    .groups = 'drop'\n  )\nkable(diet_summary_stats, caption = \"Table 5. Summary of Caloric Intake\")\n\n# Create the box plot for caloric diets\nplot <- ggplot(na.omit(extracted_data), aes(x = factor(Calorie_diet), y = Calories, fill = factor(Calorie_diet))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(x = \"Diet Type\", y = \"Calories\", title = \"Calories by Diet Type\") +\n  scale_x_discrete(labels = c(\"0\" = \"Low Calorie Diet\", \"1\" = \"High Calorie Diet\", \"2\" = \"Neither\")) +\n  scale_fill_manual(values = c(\"lightblue\", \"lightgreen\", \"salmon\")) +\n  theme_minimal() +\n  theme(legend.title = element_blank())\n```\n\n### Figure 4. Distribution of Caloric Intake by Caloric Diet Type\n\n```{r, echo = FALSE}\n# Print the caloric diet box plot\nprint(plot)\n```\n\nThe average high calorie diet included substantially higher caloric intake than either the low calorie diet or those not on a caloric diet (2528 vs 1834 and 1821 cals), but the low calorie diet was actually slightly higher than those not on a caloric diet (1834 vs 1821 cals), meaning the average participant on a low calorie diet ate more calories than those not intending to calorically restrict.\n\n## Investigate correlations between dietary intake and B vitamins\n\n### Table 6. Proportion of Participants Below B Vitamin Recommended Intake for Men (Hanna et al., 2022)\n\n```{r, echo=FALSE}\n# Define recommended B vitamin values (Hanna et al.)\nrecommended_values <- list(\n  B1 = 1.2,\n  B2 = 1.3,\n  B6 = 1\n)\n\n# Create a data frame to store proportions\nproportions <- data.frame(Vitamin = character(), Proportion_Below = numeric())\n\n# Loop through each vitamin variable\nfor (vitamin in names(recommended_values)) {\n  if (vitamin %in% colnames(extracted_data)) {\n    # Calculate the number of people below the recommendation\n    below_recommendation <- sum(extracted_data[[vitamin]] < recommended_values[[vitamin]], na.rm = TRUE)\n    total_people <- sum(!is.na(extracted_data[[vitamin]]))  # Count of non-missing values\n    \n    # Calculate the proportion\n    proportion <- below_recommendation / total_people\n    \n    # Store the result\n    proportions <- rbind(proportions, data.frame(Vitamin = vitamin, Proportion_Below = proportion))\n  } else {\n    message(paste(\"Vitamin variable\", vitamin, \"not found in the data. Skipping.\"))\n  }\n}\nkable(proportions, col.names = c(\"B Vitamin\", \"Proportion of Participants Below Recommended Intake\"))\n```\n\nThese results show that while most participants are taking their recommended B vitamin levels, between 25% and 43% of participants are not with B1 having the highest proportion of participants below the recommended levels and B6 having the lowest proportion below the recommended proportion.\n\n### Figure 5. B Vitamin Levels vs Dietary Intake\n\n```{r, message=FALSE, warning=FALSE, echo=FALSE}\ncreate_scatter_plots <- function(data) {\n  # List of nutrient variables to plot\n  nutrient_vars <- c(\"Calories\", \"Carbohydrate\", \"Fat\", \"Protein\")\n  \n  # List of vitamin variables to plot against\n  vitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n  \n  # Define recommended values for B vitamins\n  recommended_values <- list(\n    B1 = 1.2,\n    B2 = 1.3,\n    B6 = 1\n  )\n  \n   # Loop through each vitamin to create separate grids\n  for (vitamin in vitamin_vars) {\n    # Prepare an empty list to store the plot data for this vitamin\n    plot_data_list <- list()\n    \n    # Loop through each nutrient variable\n    for (nutrient in nutrient_vars) {\n      # Check if the nutrient exists in the data\n      if (!nutrient %in% colnames(data)) {\n        message(paste(\"Nutrient variable\", nutrient, \"not found in the data. Skipping.\"))\n        next\n      }\n      \n       # Check if vitamin exists in the data\n      if (vitamin %in% colnames(data)) {\n        # Prepare the data for modeling\n        temp_data <- data[, c(nutrient, vitamin)]\n        colnames(temp_data) <- c(\"Nutrient\", \"Vitamin\")\n        \n        # Filter out missing and non-finite values\n        temp_data <- temp_data %>%\n          na.omit() %>%\n          filter(is.finite(Nutrient) & is.finite(Vitamin))\n        \n        # Check if there are enough data points for modeling\n        if (nrow(temp_data) > 1) {\n          # Fit a linear model and calculate R^2\n          model <- lm(Vitamin ~ Nutrient, data = temp_data)\n          r_squared <- summary(model)$r.squared\n          \n          # Add the necessary data for plotting, including the recommended values and R^2\n          plot_data_list[[length(plot_data_list) + 1]] <- data.frame(\n            Nutrient = temp_data$Nutrient,\n            Vitamin = temp_data$Vitamin,\n            Vitamin_Name = vitamin,\n            Nutrient_Name = nutrient,\n            Recommended_Value = recommended_values[[vitamin]],\n            R_squared = r_squared\n          )\n        } else {\n          message(paste(\"Not enough data points for\", vitamin, \"vs\", nutrient))\n        }\n      } else {\n        message(paste(\"Vitamin variable\", vitamin, \"not found in the data. Skipping.\"))\n      }\n    }\n  }\n        # Combine all the data for this vitamin into a single data frame\n    plot_data <- bind_rows(plot_data_list)\n    \n    # Create the scatter plot for this vitamin using facet_wrap\n    scatter_plot <- ggplot(plot_data, aes(x = Nutrient, y = Vitamin)) +\n      geom_point(aes(color = Nutrient_Name), alpha = 0.7) +\n      geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +  # Line of best fit\n      labs(x = \"Dietary Intake\", y = \"B Vitamin Level\") +\n      theme_minimal() +\n      facet_wrap(~Nutrient_Name, scales = \"free\", nrow = 2, ncol = 2) +  # Free x-scale for each plot\n      theme(legend.title = element_blank(), strip.text = element_text(size = 12)) +\n      ggtitle(paste(vitamin, \"Levels vs Dietary Intake\")) +\n      # Add the recommended value horizontal lines for each vitamin\n      geom_hline(data = plot_data, aes(yintercept = Recommended_Value),\n                 linetype = \"dashed\", color = \"red\", linewidth = 0.7) +\n      # Annotate the R^2 value on each plot\n      geom_text(aes(x = Inf, y = Inf, label = paste(\"R² =\", round(R_squared, 2))), \n                hjust = 1.1, vjust = 1.1, color = \"black\", size = 4, \n                fontface = \"italic\") +\n      # Adjust x-axis text for readability\n      theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))\n    \n    # Print the scatter plot for this vitamin\n    print(scatter_plot)\n      }    \n    # Call the function with your data\ncreate_scatter_plots(extracted_data)\n```\n\nRegressions were fit for each diet type to answer the question of whether macronutrient consumption impacts B vitamin levels. B1 and B2 vitamins are more strongly associated with all of the macronutrient intakes than B6. The highest correlations occurred between B1 and caloric intake and B1 and carbohydrate intake. The red dashed lines are used to represent the recommended B vitamin intake levels for men of 1.2 mg of B1, 1.3 miligrams (mg) of B2 and 1.0 mg of B6 from Table 6. Overall, this demonstrates that getting enough dietary nutrition is critical for B1 and B2 vitamin daily replenishment.\n\n### Figure 6. Caloric Diet's Effect on B vitamins\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Load necessary library\nlibrary(ggplot2)\n\n# Prepare the data for plotting\nplot_data <- extracted_data[, c(\"Calories\", \"B1\", \"B2\", \"B6\", \"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")]\n\n# Create a new column for DietType based on the diet indicators\nplot_data$DietType <- 2  # Default to 2 (No Diet)\n\n# Assign values for DietType based on conditions\nplot_data$DietType[plot_data$Low_Calorie == 1] <- 0\nplot_data$DietType[plot_data$High_Calorie == 1] <- 1\n\n# Convert DietType to a factor\nplot_data$DietType <- factor(plot_data$DietType, levels = c(0, 1, 2), labels = c(\"Low Diet\", \"High Diet\", \"No Diet\"))\n\n# Filter out missing values\nplot_data <- na.omit(plot_data)\n\n# List of vitamins to plot against Calories\nvitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n\n# Create scatter plots for each vitamin\nfor (vitamin in vitamin_vars) {\n  # Basic scatter plot with a linear model\n  scatter_plot <- ggplot(plot_data, aes_string(x = \"Calories\", y = vitamin, color = \"DietType\")) +\n    geom_point(alpha = 0.3) +  \n    geom_smooth(method = \"lm\", aes(group = DietType), se = FALSE) +  # Linear model for each diet type\n    labs(x = \"Calories\", y = paste(\"Vitamin\", vitamin, \"(mg)\"), title = paste(\"Scatter Plot of Calories vs Vitamin\", vitamin, \"by Caloric Diet Type\")) +\n    theme_minimal() +\n    scale_color_manual(\n      values = c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"grey\"),\n      name = \"Diet Type\",  # Title for the legend\n      labels = c(\"Low Calorie Diet\", \"High Calorie Diet\", \"No Special Diet\")  # Custom legend labels\n    )\n\n  # Color mapping for R² text\n  color_map <- c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"gray\")\n  \n  # Initialize y_pos adjustments for each diet type\n  y_pos_adjustments <- list(\n    \"Low Diet\" = 0.45,  # Adjust this for Low Diet\n    \"High Diet\" = 0.375,  # Adjust this for High Diet\n    \"No Diet\" = 0.3    # Adjust this for No Diet\n  )\n  \n  # Create an empty list to store text annotations for each diet type\n  text_annotations <- list()\n  \n  # Calculate and display R² values\n  for (diet in levels(plot_data$DietType)) {\n    # Fit the model for each diet type\n    model <- lm(as.formula(paste(vitamin, \"~ Calories\")), data = plot_data[plot_data$DietType == diet, ])\n    r_squared <- summary(model)$r.squared\n    \n    # Calculate y position based on the maximum vitamin level and adjustment factor\n    max_y <- max(plot_data[[vitamin]], na.rm = TRUE)\n    y_pos <- max_y * y_pos_adjustments[[diet]]\n    \n    # Add the R² value to the text annotations list\n    text_annotations[[diet]] <- list(\n      x = max(plot_data$Calories, na.rm = TRUE) * 0.9,  # Place the text towards the right of the plot\n      y = y_pos,\n      label = paste(\"R² =\", round(r_squared, 3)),\n      color = color_map[diet]\n    )\n    \n    # Adjust the y position for the next diet type to avoid overlap\n    y_pos_adjustments[[diet]] <- y_pos_adjustments[[diet]] - 0.05  # Slight downward shift for the next annotation\n  }\n  \n  # Add text annotations to the plot\n  for (annotation in text_annotations) {\n    scatter_plot <- scatter_plot +\n      annotate(\"text\", x = annotation$x, y = annotation$y, \n               label = annotation$label, color = annotation$color, \n               hjust = 1, vjust = 1)\n  }\n  \n  # Print the scatter plot for this vitamin\n  print(scatter_plot)\n}\n```\n\nB vitamins have a mild-to-moderate association with dietary intake. The high calorie diet in the graphs of vitamins B1 and B2 vs calories have the highest slopes, indicating that an intention to eat more calories is also associated with an increase in B vitamin intake. This finding makes sense given participants on a high calorie diet actually eat more calories and caloric intake was shown to be moderately associated with these B vitamin levels. Interestingly, caloric diet type's association with the B vitamins was not consistent between the vitamins, indicating that more just than dietary intention is necessary for sufficient B vitamin intake.\n\n# Conclusion\n\nOverall, the pre-pandemic (2017-March 2020) participants' intended diets is associated with their true intake. Specifically, participants on a low sugar and low carbohydrate diet ate less of these macronutrients than participants not on such a diet and participants with a high protein and high caloric diet ate more protein and overall calories, respectively, than participants without these dietary intentions. On the other hand, the average participant on a low fat and low calorie diet actually ate more fats or calories, respectively, than participants who did not report adhering to these diets. Thus, Americans 1 year or older are not eating their intended low fat and low calorie diets, when compared to the average diet, while all Americans eating all other assessed diets are follow their intended diets.\n\nOne draw back to this analysis is that all interquartile ranges of dietary intake by intended diet overlap with those not following the diet. Therefore, truly following an intended diet is variable among Americans during this time period. This lack of conclusivity makes since considering dietary needs are relative to a person's physiological demands.\n\n43% of participants are below the recommended B1 levels guidelines for men, 35% are below the guidelines for B2 levels, and 26% are below the guidelines for B6 levels. Due to the correlations demonstrated between B vitamins and dietary intake, many participants should eat more macronutrients and overall calories to meet the body's B vitamin demands. In conclusion, the average American 1 year or older is eating their intended macronutrient diet and their intake is moderately associated with B vitamin levels during this time period.\n","srcMarkdownNoYaml":"\n\n## Pre-Covid American Dietary Intention and B Vitamins\n\n# Introduction\n\nThe National Health and Nutrition Examination Survey is a survey, typically conducted over a two-year period, to estimate the dietary intake over the 24-hour period prior to the interview of Americans 1 year or older. This particular dataset is a combination of data collected in the 2017-2018 cycle and 2019-March 2020 since the NHANES program was suspended in March of 2020 due to the COVID-19 pandemic. The dietary interview component of this survey is called \"What We Eat in America\" (WWEIA) and data is collected using the USDA's Automated Multiple Pass Method (AMPM). All participants are eligible for two survey interviews, the first of which is recorded in person at the Mobile Examination Center, and the second is conducted over the phone 3 to 10 days later. This data set includes dietary information from the first interview and is a log of the total energy and nutrient intakes, including the macronutrients (carbohydrates, fats, and proteins) and vitamins, from foods and beverages within the previous 24-hours. Of particular interest in this dataset is whether participants intended diet (macronutrient dietary intention) aligns with their actual food consumption (dietary intake). Additionally, there is interest in assessing the relationship between dietary intake and the B vitamins intake. B vitamins are cofactors for many cellular pathways, including cellular metabolism and synthesis of DNA and RNA, but are not stored by the body, so it is critical to replenish them daily through foods and supplements (Hanna et al, 2022). Therefore, this analysis is to assess if Americans 1 year or older are eating their intended macronutrient diet and if their intake is associated with B vitamin levels pre-pandemic (2017-March 2020).\n\n# Methods\n\nThe P_DR1TOT dataset for 2017-March 2020 was downloaded from the CDC's NHANES records of dietary data. This is a dataset from the WWEIA day 1 interviews, conducted between 2017 and March of 2020, and includes total dietary intake of participants.\n\nData variables of interest include 6 variables of special diets, referred to here as intended diet, 5 energy (caloric) and macronutrient variables, and B vitamins 1, 2, and 6. These variables were extracted from the dataset and relabeled to be more informative. 12 intended diets were recorded in separate variables as numbers 1-12 for yes to that diet or missing for no. These variables were altered to 1 for yes and 0 for no. Since low calorie and high calorie diets are labeled separately, a new variable for diet was created where low calorie is 0, high calorie is 1, and neither is 2.\n\nCorrelation between intended macronutrient or caloric diet and true dietary intake was assessed using summary statistics and box plots.\n\nThe proportion of participants below the recommended B vitamins intake levels for men were reported. Recommendations for men are used, rather than splitting the data by sex, because sex is not reported in the dataset and female dietary recommendations are less studied in scientific literature. Correlation between dietary intake, as well as caloric diet type, and B vitamin levels was assessed using scatter plots and linear fitted models.\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Open necessary packages\nlibrary(haven)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(gridExtra)\nlibrary(tidyr)\n```\n\n## Exploring Variables of Interest\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Read in table and check\ndata <- read_xpt(\"P_DR1TOT.XPT\")\nhead(data)\ntail(data)\ndim(data)\nsapply(data, class)\n```\n\n### Figure 1. Distribution of Macronutrients for All Participants\n\n```{r,  echo=FALSE, warning=FALSE}\nboxplot_data <- data |>\n  select(DR1TSUGR, DR1TCARB, DR1TTFAT, DR1TPROT) |>\n  pivot_longer(cols = everything(), names_to = \"Nutrient\", values_to = \"Value\")\n\n# Create the box plot\nggplot(boxplot_data, aes(x = Nutrient, y = Value)) +\n  geom_boxplot(fill = \"lightblue\") +\n  labs(title = \"Box Plot of Macronutrient Intake for All Participants\",\n       x = \"Macronutrient\",\n       y = \"Nurtitional Intake (g)\") +\n  scale_x_discrete(labels = c(\"DR1TCARB\" = \"Carbohydrates\", \"DR1TPROT\" = \"Protein\",\"DR1TSUGR\" = \"Sugar\", \"DR1TTFAT\" = \"Fat\")) +\n  theme_minimal()\n```\n\nAll mean values for intake are increased by high outliers, so medians are assessed instead.\n\n### Table 1. Median Caloric, Macronutrient and B Vitamin Intake Levels\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Impute multiple columns at once\ndata_avgs <- data |>\n  summarise(\n    Calories = median(DR1TKCAL, na.rm = TRUE),\n    Sugar = median(DR1TSUGR, na.rm = TRUE),\n    Carbohydrate = median(DR1TCARB, na.rm = TRUE),\n    Fat = median(DR1TTFAT, na.rm = TRUE),\n    Protein = median(DR1TPROT, na.rm = TRUE),\n    B1 = median(DR1TVB1, na.rm = TRUE),\n    B2 = median(DR1TVB2, na.rm = TRUE),\n    B6 = median(DR1TVB6, na.rm = TRUE))\nkable(data_avgs, caption = \"Total Median Caloric (cal), Macronutrient (g) and B Vitamin Intake Levels (mg)\")\n```\n\nThese median values are used to categorize whether dietary intake is high (above the median) or low (below the median).\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Create categorical variables\nhigh_low <- data |>\n  mutate(\n    low_Calories = ifelse(DR1TKCAL < as.numeric(data_avgs['Calories']), 1, 0),\n    low_Sugar = ifelse(DR1TSUGR < as.numeric(data_avgs['Sugar']),1, 0),\n    low_Carbohydrate = ifelse(DR1TCARB < as.numeric(data_avgs['Carbohydrate']), 1, 0),\n    low_Fat = ifelse(DR1TTFAT < as.numeric(data_avgs['Fat']), 1, 0),\n    low_Protein = ifelse(DR1TPROT < as.numeric(data_avgs['Protein']), 1, 0)\n  ) |>\n  select(starts_with(\"low_\") | starts_with(\"high_\"))  # Keep only the categorical columns\nprint(high_low)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Extract data to answer questions\nextracted_data <- data |>\n  select(DR1TKCAL, DRQSDT1, DRQSDT8, DR1TSUGR, DRQSDT4, DR1TCARB, DRQSDT9, DR1TTFAT, DRQSDT2, DR1TPROT, DRQSDT10, DR1TVB1, DR1TVB2, DR1TVB6) |>\n  rename(\n    Calories = DR1TKCAL,\n    Low_Calorie = DRQSDT1, # Low cal diet\n    High_Calorie = DRQSDT8, # Weight gain diet\n    Sugar = DR1TSUGR,\n    Low_Sugar = DRQSDT4, # Low sugar diet\n    Carbohydrate = DR1TCARB,\n    Low_Carbohydrate = DRQSDT9, # Low carb diet\n    Fat = DR1TTFAT,\n    Low_Fat = DRQSDT2, # Low fat diet\n    Protein = DR1TPROT,\n    High_Protein = DRQSDT10, # High Protein diet\n    # Vitamin Bs\n    B1 = DR1TVB1, # Vitamin B1\n    B2 = DR1TVB2, # Vitamin B2\n    B6 = DR1TVB6 # Vitamin B6\n  )\n\n# Edit dietary output\nextracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")] <- \n  lapply(extracted_data[c(\"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")], function(x) {\n    x[is.na(x)] <- 0 # Replace NA values with 0\n    x[x != 0] <- 1 # Replace values other than 0 with 1\n    return(x)\n  })\n\n# Make a new variable for diet type\nextracted_data <- extracted_data |>\n  mutate(Calorie_diet = case_when(\n    Low_Calorie == 1 ~ 0,\n    High_Calorie == 1 ~ 1,\n    TRUE ~ 2  # Assign NA if neither condition is met\n  ))\nprint(c(\"Head of Categorization of Diet Type (0 = Low Calorie, 1 = High Calorie and 2 = No Caloric Diet)\"))\nhead(extracted_data$Calorie_diet)\n```\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE, results=FALSE}\n# Summary of Extracted Data\nhead(extracted_data)\ntail(extracted_data)\ndim(extracted_data)\nsapply(extracted_data, class)\n```\n\n# Preliminary Results\n\n## Investigate correlation between intended diet and dietary intake\n\n### Figure 2. Proportion of Participants with an Intended Macronutrient Diet Ingesting Above or Below the Total Median Intake\n\n```{r, echo=FALSE, warning=FALSE}\n# Check if both data frames have the same number of rows\nif (nrow(extracted_data) == nrow(high_low)) {\n  combined_data <- data.frame(\n    Low_Sugar = extracted_data$Low_Sugar,\n    low_Sugar = high_low$low_Sugar,\n    Low_Carbohydrate = extracted_data$Low_Carbohydrate,\n    low_Carbohydrate = high_low$low_Carbohydrate,\n    Low_Fat = extracted_data$Low_Fat,\n    low_Fat = high_low$low_Fat,\n    High_Protein = extracted_data$High_Protein,\n    low_Protein = high_low$low_Protein\n  )\n} else {\n  stop(\"The data frames have different numbers of rows and cannot be combined.\")\n}\n\n# Create an empty list to store the plots\nplot_list <- list()\n\n# Create pairs for plotting\npairs <- list(\n  c(\"Low_Sugar\", \"low_Sugar\"), # Intended diet, actual intake\n  c(\"Low_Carbohydrate\", \"low_Carbohydrate\"),\n  c(\"Low_Fat\", \"low_Fat\"),\n  c(\"High_Protein\", \"low_Protein\")\n)\n\n# Create a mapping for readable titles\ntitle_map <- c(\n  \"Low_Sugar\" = \"Low Sugar\",\n  \"Low_Carbohydrate\" = \"Low Carbohydrate\",\n  \"Low_Fat\" = \"Low Fat\",\n  \"High_Protein\" = \"High Protein\"\n)\n\n# Loop through pairs of variables to create stacked bar plots\nfor (pair in pairs) {\n  \n  # Create a data frame for plotting (without reshaping)\n  plot_data <- data.frame(\n    Diet = factor(combined_data[[pair[1]]], levels = c(0, 1), labels = c(\"No\", \"Yes\")),\n    Intake = factor(combined_data[[pair[2]]], levels = c(0, 1), labels = c(\"Above Median\", \"Below Median\"))\n  )\n  \n  # Filter the data for Diet == \"Yes\" (Diet = 1)\n  plot_data <- plot_data[plot_data$Diet == \"Yes\", ]\n  \n  # Create a stacked bar plot\n  plot <- ggplot(plot_data, aes(x = Diet, fill = Intake)) +\n    geom_bar(position = \"fill\") +\n    scale_fill_manual(values = c(\"Above Median\" = \"salmon\", \"Below Median\" = \"skyblue\")) +\n    labs(x = paste(title_map[1],\"Diet\"), \n         y = \"Proportion\",\n         title = paste(title_map[pair[1]], \"Diet vs. Intake\")) +  # Use the mapped title) +\n    theme_minimal() +\n    theme(legend.title = element_blank())  # Remove legend title\n  \n  # Add the plot to the list\n  plot_list[[length(plot_list) + 1]] <- plot\n}\n\n# Arrange the plots in a 2x2 grid\ngrid.arrange(grobs = plot_list, ncol = 2, nrow = 2)\n```\n\nApproximately 63% of participants on a low sugar diet are eating less than the median sugar levels, while nearly 75% of participants on a low carbohydrate diet are eating less than the median carbohydrate levels. Conversely, less than half of the participants are eating less than the median fat levels. Finally, more than 75% of participants are eating their intended high protein diet compared to the median protein levels.\n\nThese results show that a high protein diet is the most well adhered to diet when compared to the surveyed participants, while a low fat diet is the least well adhered to diet.\n\n## Compare the spread of macronutrient intake levels of participants with an intended diet with those not on an intended diet\n\n```{r, echo=FALSE, warning=FALSE}\n# Function for summary statistics and plotting\ncreate_summary_plot <- function(data, cat_var, cont_var) {\n  # Convert the categorical variable to a factor\n  data[[cat_var]] <- as.factor(data[[cat_var]])\n  filtered_data <- data |> filter(is.finite(!!sym(cont_var)))\n  \n    # Create a mapping for human-readable titles\n  title_map <- c(\n    \"Low_Sugar\" = \"Low Sugar\",\n    \"Low_Carbohydrate\" = \"Low Carbohydrate\",\n    \"Low_Fat\" = \"Low Fat\",\n    \"High_Protein\" = \"High Protein\"\n  )\n\n  # Create the box plot with color based on the categorical variable\n  box_plot <- ggplot(filtered_data, aes_string(x = cat_var, y = cont_var, fill = cat_var)) +\n    geom_boxplot() +\n    labs(x = paste(title_map[cat_var], \"(yes/no)\"), y = cont_var) +  # Use mapped title for x-axis label\n    ggtitle(paste(cont_var, \"Intake for\", title_map[cat_var], \"Diet Intention\")) +  # Use mapped title for plot title\n    theme_minimal() +\n    scale_fill_manual(values = c(\"lightblue\", \"lightgreen\")) +\n    theme(legend.position = \"none\")\n\n  # Create the summary table\n  summary_table <- data |>\n    group_by(!!sym(cat_var)) |>\n    summarize(\n      Mean = mean(!!sym(cont_var), na.rm = TRUE),\n      Median = median(!!sym(cont_var), na.rm = TRUE),\n      Min = min(!!sym(cont_var), na.rm = TRUE),\n      Max = max(!!sym(cont_var), na.rm = TRUE),\n      Count = n(),\n      .groups = 'drop'\n    )\n\n  # Return the plot and summary table separately\n  return(list(plot = box_plot, summary_table = summary_table))\n}\n\n# Create lists to hold the plots and individual summaries\nplots <- list()\nsummaries <- list()\n\n# Generate box plots and individual summary tables for nutrients\nextracted_data$Low_Sugar <- factor(extracted_data$Low_Sugar, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_sugar <- create_summary_plot(extracted_data, \"Low_Sugar\", \"Sugar\")\nplots[[1]] <- result_sugar$plot\nsummaries[[1]] <- result_sugar$summary_table\nkable(result_sugar$summary_table, caption = \"Table 1. Summary of Sugar Intake\", , col.names = c(\"Low Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\nextracted_data$Low_Carbohydrate <- factor(extracted_data$Low_Carbohydrate, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_carb <- create_summary_plot(extracted_data, \"Low_Carbohydrate\", \"Carbohydrate\")\nplots[[2]] <- result_carb$plot\nsummaries[[2]] <- result_carb$summary_table\nkable(result_carb$summary_table, caption = \"Table 2. Summary of Carbohydrate Intake\", col.names = c(\"Low Carb Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\nextracted_data$Low_Fat <- factor(extracted_data$Low_Fat, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_fat <- create_summary_plot(extracted_data, \"Low_Fat\", \"Fat\")\nplots[[3]] <- result_fat$plot\nsummaries[[3]] <- result_fat$summary_table\nkable(result_fat$summary_table, caption = \"Table 3. Summary of Fat Intake\", col.names = c(\"Low Fat Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\nextracted_data$High_Protein <- factor(extracted_data$High_Protein, \n                                            levels = c(0, 1), \n                                            labels = c(\"No\", \"Yes\"))\nresult_pro <- create_summary_plot(extracted_data, \"High_Protein\", \"Protein\")\nplots[[4]] <- result_pro$plot\nsummaries[[4]] <- result_pro$summary_table\nkable(result_pro$summary_table, caption = \"Table 4. Summary of Protein Intake\", col.names = c(\"High Protein Diet\", \"Mean\", \"Median\", \"Min\", \"Max\", \"Count\"))\n\n```\n\n### Figure 3. Distribution of Macronutrient Dietary Intake by Diet Type\n\n```{r, echo=FALSE}\n# Print box plots\ngrid.arrange(grobs = plots, ncol = 2) \n```\n\nThe low sugar group averaged lower total sugars than those not on the diet (62.24 vs 90.89 g). Additionally, the low carbohydrate group ate less carbohydrates than those not on this diet (165.395 vs 219.08 g). On the other hand, those on a low fat diet ate more fats than those not on the diet (72.62 vs 71.805 g), meaning the average participant on a low fat diet did not eat less fats than other participants. The average high protein diet had substantially more protein intake than those not on the diet (100.61 vs 64.72 g).\n\n### Table 5. Summary of Caloric Intake by Diet Type\n\n```{r, echo=FALSE, warning=FALSE}\n# Summary statistics for caloric diets\ndiet_summary_stats <- extracted_data |>\n  mutate(Diet = recode(Calorie_diet,\n                               `0` = \"Low Calorie Diet\",\n                               `1` = \"High Calorie Diet\",\n                               `2` = \"Neither\")) |> \n  # Group by the recoded Calorie_diet variable\n  group_by(Diet) |>\n  summarize(\n    Mean = mean(Calories, na.rm = TRUE),\n    Median = median(Calories, na.rm = TRUE),\n    Min = min(Calories, na.rm = TRUE),\n    Max = max(Calories, na.rm = TRUE),\n    Count = n(),\n    .groups = 'drop'\n  )\nkable(diet_summary_stats, caption = \"Table 5. Summary of Caloric Intake\")\n\n# Create the box plot for caloric diets\nplot <- ggplot(na.omit(extracted_data), aes(x = factor(Calorie_diet), y = Calories, fill = factor(Calorie_diet))) +\n  geom_boxplot(alpha = 0.7) +\n  labs(x = \"Diet Type\", y = \"Calories\", title = \"Calories by Diet Type\") +\n  scale_x_discrete(labels = c(\"0\" = \"Low Calorie Diet\", \"1\" = \"High Calorie Diet\", \"2\" = \"Neither\")) +\n  scale_fill_manual(values = c(\"lightblue\", \"lightgreen\", \"salmon\")) +\n  theme_minimal() +\n  theme(legend.title = element_blank())\n```\n\n### Figure 4. Distribution of Caloric Intake by Caloric Diet Type\n\n```{r, echo = FALSE}\n# Print the caloric diet box plot\nprint(plot)\n```\n\nThe average high calorie diet included substantially higher caloric intake than either the low calorie diet or those not on a caloric diet (2528 vs 1834 and 1821 cals), but the low calorie diet was actually slightly higher than those not on a caloric diet (1834 vs 1821 cals), meaning the average participant on a low calorie diet ate more calories than those not intending to calorically restrict.\n\n## Investigate correlations between dietary intake and B vitamins\n\n### Table 6. Proportion of Participants Below B Vitamin Recommended Intake for Men (Hanna et al., 2022)\n\n```{r, echo=FALSE}\n# Define recommended B vitamin values (Hanna et al.)\nrecommended_values <- list(\n  B1 = 1.2,\n  B2 = 1.3,\n  B6 = 1\n)\n\n# Create a data frame to store proportions\nproportions <- data.frame(Vitamin = character(), Proportion_Below = numeric())\n\n# Loop through each vitamin variable\nfor (vitamin in names(recommended_values)) {\n  if (vitamin %in% colnames(extracted_data)) {\n    # Calculate the number of people below the recommendation\n    below_recommendation <- sum(extracted_data[[vitamin]] < recommended_values[[vitamin]], na.rm = TRUE)\n    total_people <- sum(!is.na(extracted_data[[vitamin]]))  # Count of non-missing values\n    \n    # Calculate the proportion\n    proportion <- below_recommendation / total_people\n    \n    # Store the result\n    proportions <- rbind(proportions, data.frame(Vitamin = vitamin, Proportion_Below = proportion))\n  } else {\n    message(paste(\"Vitamin variable\", vitamin, \"not found in the data. Skipping.\"))\n  }\n}\nkable(proportions, col.names = c(\"B Vitamin\", \"Proportion of Participants Below Recommended Intake\"))\n```\n\nThese results show that while most participants are taking their recommended B vitamin levels, between 25% and 43% of participants are not with B1 having the highest proportion of participants below the recommended levels and B6 having the lowest proportion below the recommended proportion.\n\n### Figure 5. B Vitamin Levels vs Dietary Intake\n\n```{r, message=FALSE, warning=FALSE, echo=FALSE}\ncreate_scatter_plots <- function(data) {\n  # List of nutrient variables to plot\n  nutrient_vars <- c(\"Calories\", \"Carbohydrate\", \"Fat\", \"Protein\")\n  \n  # List of vitamin variables to plot against\n  vitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n  \n  # Define recommended values for B vitamins\n  recommended_values <- list(\n    B1 = 1.2,\n    B2 = 1.3,\n    B6 = 1\n  )\n  \n   # Loop through each vitamin to create separate grids\n  for (vitamin in vitamin_vars) {\n    # Prepare an empty list to store the plot data for this vitamin\n    plot_data_list <- list()\n    \n    # Loop through each nutrient variable\n    for (nutrient in nutrient_vars) {\n      # Check if the nutrient exists in the data\n      if (!nutrient %in% colnames(data)) {\n        message(paste(\"Nutrient variable\", nutrient, \"not found in the data. Skipping.\"))\n        next\n      }\n      \n       # Check if vitamin exists in the data\n      if (vitamin %in% colnames(data)) {\n        # Prepare the data for modeling\n        temp_data <- data[, c(nutrient, vitamin)]\n        colnames(temp_data) <- c(\"Nutrient\", \"Vitamin\")\n        \n        # Filter out missing and non-finite values\n        temp_data <- temp_data %>%\n          na.omit() %>%\n          filter(is.finite(Nutrient) & is.finite(Vitamin))\n        \n        # Check if there are enough data points for modeling\n        if (nrow(temp_data) > 1) {\n          # Fit a linear model and calculate R^2\n          model <- lm(Vitamin ~ Nutrient, data = temp_data)\n          r_squared <- summary(model)$r.squared\n          \n          # Add the necessary data for plotting, including the recommended values and R^2\n          plot_data_list[[length(plot_data_list) + 1]] <- data.frame(\n            Nutrient = temp_data$Nutrient,\n            Vitamin = temp_data$Vitamin,\n            Vitamin_Name = vitamin,\n            Nutrient_Name = nutrient,\n            Recommended_Value = recommended_values[[vitamin]],\n            R_squared = r_squared\n          )\n        } else {\n          message(paste(\"Not enough data points for\", vitamin, \"vs\", nutrient))\n        }\n      } else {\n        message(paste(\"Vitamin variable\", vitamin, \"not found in the data. Skipping.\"))\n      }\n    }\n  }\n        # Combine all the data for this vitamin into a single data frame\n    plot_data <- bind_rows(plot_data_list)\n    \n    # Create the scatter plot for this vitamin using facet_wrap\n    scatter_plot <- ggplot(plot_data, aes(x = Nutrient, y = Vitamin)) +\n      geom_point(aes(color = Nutrient_Name), alpha = 0.7) +\n      geom_smooth(method = \"lm\", se = FALSE, color = \"blue\") +  # Line of best fit\n      labs(x = \"Dietary Intake\", y = \"B Vitamin Level\") +\n      theme_minimal() +\n      facet_wrap(~Nutrient_Name, scales = \"free\", nrow = 2, ncol = 2) +  # Free x-scale for each plot\n      theme(legend.title = element_blank(), strip.text = element_text(size = 12)) +\n      ggtitle(paste(vitamin, \"Levels vs Dietary Intake\")) +\n      # Add the recommended value horizontal lines for each vitamin\n      geom_hline(data = plot_data, aes(yintercept = Recommended_Value),\n                 linetype = \"dashed\", color = \"red\", linewidth = 0.7) +\n      # Annotate the R^2 value on each plot\n      geom_text(aes(x = Inf, y = Inf, label = paste(\"R² =\", round(R_squared, 2))), \n                hjust = 1.1, vjust = 1.1, color = \"black\", size = 4, \n                fontface = \"italic\") +\n      # Adjust x-axis text for readability\n      theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10))\n    \n    # Print the scatter plot for this vitamin\n    print(scatter_plot)\n      }    \n    # Call the function with your data\ncreate_scatter_plots(extracted_data)\n```\n\nRegressions were fit for each diet type to answer the question of whether macronutrient consumption impacts B vitamin levels. B1 and B2 vitamins are more strongly associated with all of the macronutrient intakes than B6. The highest correlations occurred between B1 and caloric intake and B1 and carbohydrate intake. The red dashed lines are used to represent the recommended B vitamin intake levels for men of 1.2 mg of B1, 1.3 miligrams (mg) of B2 and 1.0 mg of B6 from Table 6. Overall, this demonstrates that getting enough dietary nutrition is critical for B1 and B2 vitamin daily replenishment.\n\n### Figure 6. Caloric Diet's Effect on B vitamins\n\n```{r, echo=FALSE, message=FALSE, warning=FALSE}\n# Load necessary library\nlibrary(ggplot2)\n\n# Prepare the data for plotting\nplot_data <- extracted_data[, c(\"Calories\", \"B1\", \"B2\", \"B6\", \"Low_Calorie\", \"High_Calorie\", \"Low_Sugar\", \"Low_Carbohydrate\", \"Low_Fat\", \"High_Protein\")]\n\n# Create a new column for DietType based on the diet indicators\nplot_data$DietType <- 2  # Default to 2 (No Diet)\n\n# Assign values for DietType based on conditions\nplot_data$DietType[plot_data$Low_Calorie == 1] <- 0\nplot_data$DietType[plot_data$High_Calorie == 1] <- 1\n\n# Convert DietType to a factor\nplot_data$DietType <- factor(plot_data$DietType, levels = c(0, 1, 2), labels = c(\"Low Diet\", \"High Diet\", \"No Diet\"))\n\n# Filter out missing values\nplot_data <- na.omit(plot_data)\n\n# List of vitamins to plot against Calories\nvitamin_vars <- c(\"B1\", \"B2\", \"B6\")\n\n# Create scatter plots for each vitamin\nfor (vitamin in vitamin_vars) {\n  # Basic scatter plot with a linear model\n  scatter_plot <- ggplot(plot_data, aes_string(x = \"Calories\", y = vitamin, color = \"DietType\")) +\n    geom_point(alpha = 0.3) +  \n    geom_smooth(method = \"lm\", aes(group = DietType), se = FALSE) +  # Linear model for each diet type\n    labs(x = \"Calories\", y = paste(\"Vitamin\", vitamin, \"(mg)\"), title = paste(\"Scatter Plot of Calories vs Vitamin\", vitamin, \"by Caloric Diet Type\")) +\n    theme_minimal() +\n    scale_color_manual(\n      values = c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"grey\"),\n      name = \"Diet Type\",  # Title for the legend\n      labels = c(\"Low Calorie Diet\", \"High Calorie Diet\", \"No Special Diet\")  # Custom legend labels\n    )\n\n  # Color mapping for R² text\n  color_map <- c(\"Low Diet\" = \"red\", \"High Diet\" = \"blue\", \"No Diet\" = \"gray\")\n  \n  # Initialize y_pos adjustments for each diet type\n  y_pos_adjustments <- list(\n    \"Low Diet\" = 0.45,  # Adjust this for Low Diet\n    \"High Diet\" = 0.375,  # Adjust this for High Diet\n    \"No Diet\" = 0.3    # Adjust this for No Diet\n  )\n  \n  # Create an empty list to store text annotations for each diet type\n  text_annotations <- list()\n  \n  # Calculate and display R² values\n  for (diet in levels(plot_data$DietType)) {\n    # Fit the model for each diet type\n    model <- lm(as.formula(paste(vitamin, \"~ Calories\")), data = plot_data[plot_data$DietType == diet, ])\n    r_squared <- summary(model)$r.squared\n    \n    # Calculate y position based on the maximum vitamin level and adjustment factor\n    max_y <- max(plot_data[[vitamin]], na.rm = TRUE)\n    y_pos <- max_y * y_pos_adjustments[[diet]]\n    \n    # Add the R² value to the text annotations list\n    text_annotations[[diet]] <- list(\n      x = max(plot_data$Calories, na.rm = TRUE) * 0.9,  # Place the text towards the right of the plot\n      y = y_pos,\n      label = paste(\"R² =\", round(r_squared, 3)),\n      color = color_map[diet]\n    )\n    \n    # Adjust the y position for the next diet type to avoid overlap\n    y_pos_adjustments[[diet]] <- y_pos_adjustments[[diet]] - 0.05  # Slight downward shift for the next annotation\n  }\n  \n  # Add text annotations to the plot\n  for (annotation in text_annotations) {\n    scatter_plot <- scatter_plot +\n      annotate(\"text\", x = annotation$x, y = annotation$y, \n               label = annotation$label, color = annotation$color, \n               hjust = 1, vjust = 1)\n  }\n  \n  # Print the scatter plot for this vitamin\n  print(scatter_plot)\n}\n```\n\nB vitamins have a mild-to-moderate association with dietary intake. The high calorie diet in the graphs of vitamins B1 and B2 vs calories have the highest slopes, indicating that an intention to eat more calories is also associated with an increase in B vitamin intake. This finding makes sense given participants on a high calorie diet actually eat more calories and caloric intake was shown to be moderately associated with these B vitamin levels. Interestingly, caloric diet type's association with the B vitamins was not consistent between the vitamins, indicating that more just than dietary intention is necessary for sufficient B vitamin intake.\n\n# Conclusion\n\nOverall, the pre-pandemic (2017-March 2020) participants' intended diets is associated with their true intake. Specifically, participants on a low sugar and low carbohydrate diet ate less of these macronutrients than participants not on such a diet and participants with a high protein and high caloric diet ate more protein and overall calories, respectively, than participants without these dietary intentions. On the other hand, the average participant on a low fat and low calorie diet actually ate more fats or calories, respectively, than participants who did not report adhering to these diets. Thus, Americans 1 year or older are not eating their intended low fat and low calorie diets, when compared to the average diet, while all Americans eating all other assessed diets are follow their intended diets.\n\nOne draw back to this analysis is that all interquartile ranges of dietary intake by intended diet overlap with those not following the diet. Therefore, truly following an intended diet is variable among Americans during this time period. This lack of conclusivity makes since considering dietary needs are relative to a person's physiological demands.\n\n43% of participants are below the recommended B1 levels guidelines for men, 35% are below the guidelines for B2 levels, and 26% are below the guidelines for B6 levels. Due to the correlations demonstrated between B vitamins and dietary intake, many participants should eat more macronutrients and overall calories to meet the body's B vitamin demands. In conclusion, the average American 1 year or older is eating their intended macronutrient diet and their intake is moderately associated with B vitamin levels during this time period.\n"},"formats":{"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","embed-resources":true,"output-file":"Final Project.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"editor":"visual","title":"PM 566 Final Project","author":"Giuliet Kibler"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html"]}